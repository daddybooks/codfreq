#! /bin/bash

set -e

cd $(dirname $0)/..
S3_BUCKET="s3://codfreq-assets.hivdb.org"


lss3() {
    aws s3 ls ${S3_BUCKET}/${1} |
    awk '{print $4}'
}


downloads3() {
    aws s3 cp ${S3_BUCKET}/$1 $2 | sed 's/\r/\n/g' |
    \grep '^download: ' |
    awk '{
        sub("\"", "\\\"", $2);
        sub("\"", "\\\"", $4);
        print "{\"op\": \"download\", \"from\": \"" $2 "\", \"to\": \"" $4 "\"}";
    }'
}

fetch_profile() {
    downloads3 profiles/$1 $2
}

syncs3() {
    aws s3 sync $1 ${S3_BUCKET}/$2 | sed 's/\r/\n/g' |
    \grep '^upload: ' | while read line; do
        echo $line |
        awk '{
            sub("\"", "\\\"", $2);
            sub("\"", "\\\"", $4);
            print "{\"op\": \"upload\", \"from\": \"" $2 "\", \"to\": \"" $4 "\"}";
        }'
    done
}

USAGE="command usage: $(basename $0) -r <PROFILE> -p <PATH_PREFIX>"

while getopts ':vr:p:' OPT; do
    case "$OPT" in
        r)
            PROFILE=$OPTARG
            ;;
        p)
            PATH_PREFIX=$OPTARG
            ;;
        \?)
            echo $USAGE >&2
            exit 0
            ;;
        :) echo "Missing option argument for -$OPTARG\n$USAGE" >&2; exit 1;;
        *) echo "Unimplemented option: -$OPTARG\n$USAGE" >&2; exit 1;;
    esac
done

if [ -z $PROFILE ]; then
    echo "Missing required option argument -r <PROFILE>" >&2
    exit 1
fi

if [ -z $PATH_PREFIX ]; then
    echo "Missing required option argument -p <PATH_PREFIX>" >&2
    exit 1
fi


tmpdir=$(mktemp -d)
trap "rm -rf $tmpdir" EXIT
mkdir -p /tmp/profiles

fetch_profile $PROFILE /tmp/profiles/$PROFILE
PROFILE=/tmp/profiles/$PROFILE
if [ ! -f $PROFILE ]; then
    echo "Value of -r <PROFILE> is not a valid file" >&2
    exit 1
fi

for file in $(lss3 $PATH_PREFIX); do
    lower=${file,,}
    if [[ $lower == *.fastq.gz || $lower == *.fastq || $lower == *.json || $lower == *.fa || $lower == *.bed ]]; then
        downloads3 $PATH_PREFIX$file $tmpdir
    fi
done

fastq2codfreq $tmpdir -p minimap2 -r $PROFILE --log-format json
make-response $tmpdir $PATH_PREFIX
compress-codfreq $tmpdir --log-format json

pushd $tmpdir > /dev/null
rm -rf *.codfreq *.untrans.json
zip -q codfreqs.zip *.codfreq.gz
popd > /dev/null
syncs3 $tmpdir $PATH_PREFIX
echo '{"op": "done"}'
